[tool.black]
line-length = 110
target-version = ["py39"]

[tool.isort]
known_first_party = ["shifter_pandas"]
known_third_party = []
multi_line_output = 3
include_trailing_comma = 1
force_grid_wrap = 0
use_parentheses = 1
line_length = 110
force_sort_within_sections = 1

[tool.mypy]
python_version = "3.9"
ignore_missing_imports = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict = true
exclude = "setup.py"

[tool.poetry]
name = "shifter-pandas"
version = "0.0.0"
description = "Convert some data into Panda DataFrames"
readme = "README.md"
authors = ["St√©phane Brunner <stephane.brunner@gmail.com>"]
homepage = "https://hub.docker.com/r/sbrunner/shifter-pandas/"
repository = "https://github.com/sbrunner/shifter-pandas"
license = "BSD-2-Clause"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Typing :: Typed",
]
keywords = ["shifter", "pandas"]
packages = [{ include = "shifter_pandas" }, { include = "shifter_pandas/py.typed" }]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
requests = "2.31.0"
pandas = "2.2.1"
openpyxl = "3.1.2"
wikidata = "0.7.0"
toml = "0.10.2"
certifi = "2024.2.2"
urllib3 = "2.2.1"

[tool.poetry.dev-dependencies]
prospector = { version = "1.10.3", extras = ["with_bandit", "with_mypy", "with_pyroma"] }
pytest = "8.1.1"
coverage = "7.4.4"
types-toml = "0.10.8.20240310"
types-requests = "2.31.0.20240311"

[tool.poetry.group.dev.dependencies]
prospector-profile-duplicated = "1.2.0"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-plugin-tweak-dependencies-version", "poetry-dynamic-versioning", "poetry-plugin-drop-python-upper-constraint"]
build-backend = "poetry.core.masonry.api"

[tool.poetry-plugin-tweak-dependencies-version]
default = "present"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = "^((?P<epoch>\\d+)!)?(?P<base>\\d+(\\.\\d+)*)"
format-jinja = """
{%- if env.get("VERSION_TYPE") == "version_branch" -%}
{{serialize_pep440(bump_version(base, 1 if env.get("IS_MASTER") == "TRUE" else 2), dev=distance)}}
{%- elif distance == 0 -%}
{{serialize_pep440(base)}}
{%- else -%}
{{serialize_pep440(bump_version(base), dev=distance)}}
{%- endif -%}
"""
